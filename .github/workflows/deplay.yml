name: DeployWorkflow

on: push

jobs:
  deploy:
    runs-on: ${{ vars.YONGHU }}-latest
    steps:
      - name: checkout
        uses: actions/checkout@v5

      - name: ssh setup
        run: |
          mkdir -p ~/.ssh
          echo "${{secrets.KEYSSHGOOGLE}}" > ~/.ssh/meinPrivateKey
          chmod 400 ~/.ssh/meinPrivateKey
          ssh-keyscan -H ${{secrets.G_CLOUD_DONG_IP}}  >> ~/.ssh/known_hosts

      - name: Create work-test on G_CLOUD_DONG
        run: |
          ssh -i ~/.ssh/meinPrivateKey ${{ vars.YONGHU }}@${{ secrets.G_CLOUD_DONG_IP }} "mkdir -p ~/work-test"

      - name: Copy info.txt to G_CLOUD_DONG
        run: |
          scp -i ~/.ssh/meinPrivateKey info.txt ${{ vars.YONGHU }}@${{ secrets.G_CLOUD_DONG_IP }}:~/work-test/info.txt

      - name: Verify info.txt on G_CLOUD_DONG
        run: |
          ssh -i ~/.ssh/meinPrivateKey ${{ vars.YONGHU }}@${{ secrets.G_CLOUD_DONG_IP }} "ls -l ~/work-test && head -n1 ~/work-test/info.txt"

      - name: install nginx
        run: |
          ssh -i ~/.ssh/meinPrivateKey ${{ vars.YONGHU }}@${{secrets.G_CLOUD_DONG_IP}} "sudo apt update"
          ssh -i ~/.ssh/meinPrivateKey ${{ vars.YONGHU }}@${{secrets.G_CLOUD_DONG_IP}} "sudo apt install nginx -y"

      - name: Install cowsay on G_CLOUD_DONG
        run: |
          ssh -i ~/.ssh/meinPrivateKey ${{ vars.YONGHU }}@${{ secrets.G_CLOUD_DONG_IP }} \
            "sudo apt update -y && sudo apt install -y cowsay"

      - name: Run cowsay on G_CLOUD_DONG
        run: |
          ssh -i ~/.ssh/meinPrivateKey ${{ vars.YONGHU }}@${{ secrets.G_CLOUD_DONG_IP }} \
            'cowsay "Hallo aus den GitHub Actions"'

    #   - name: SSH Connection
    #     run: |
    #       scp -i ~/.ssh/meinPrivateKey frontend/index.html ${{ vars.YONGHU }}@${{secrets.G_CLOUD_DONG_IP}}:/home/${{ vars.YONGHU }}/index.html
    #       ssh -i ~/.ssh/meinPrivateKey ${{ vars.YONGHU }}@${{secrets.G_CLOUD_DONG_IP}} "sudo cp /home/${{ vars.YONGHU }}/index.html /var/www/html/index.html"

#   docker-test-job:
#     runs-on: ${{ vars.YONGHU }}-latest

#     steps:
#       - name: ssh setup
#         run: |
#           mkdir -p ~/.ssh
#           echo "${{secrets.EC2_P_KEY}}" > ~/.ssh/meinPrivateKey
#           chmod 400 ~/.ssh/meinPrivateKey
#           ssh-keyscan -H ${{secrets.G_CLOUD_DONG_IP}}  >> ~/.ssh/known_hosts

#       - name: install docker
#         run: |
#           ssh -i ~/.ssh/meinPrivateKey ${{ vars.YONGHU }}@${{secrets.G_CLOUD_DONG_IP}} "sudo apt update"
#           ssh -i ~/.ssh/meinPrivateKey ${{ vars.YONGHU }}@${{secrets.G_CLOUD_DONG_IP}} "sudo apt install docker.io -y"
#           ssh -i ~/.ssh/meinPrivateKey ${{ vars.YONGHU }}@${{secrets.G_CLOUD_DONG_IP}} "sudo usermod -aG docker ${{ vars.YONGHU }}"

#       - name: start nginx container on ec2 instance
#         run: ssh -i ~/.ssh/meinPrivateKey ${{ vars.YONGHU }}@${{secrets.G_CLOUD_DONG_IP}} "docker run -d -p 8080:80 nginx"
